!function(){"use strict";function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var t=function(){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this._baseUrl=e.baseUrl,this._headers=e.headers}var n,r;return n=t,(r=[{key:"getUserInfo",value:function(){return fetch("".concat(this._baseUrl,"/users/me"),{headers:this._headers}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}},{key:"setUserInfo",value:function(e){return fetch("".concat(this._baseUrl,"/users/me"),{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e.name,about:e.info})}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}},{key:"setUserAvatar",value:function(e){return fetch("".concat(this._baseUrl,"/users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e.link})}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}},{key:"getInitialCards",value:function(){return fetch("".concat(this._baseUrl,"/cards"),{headers:this._headers}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}},{key:"addNewCard",value:function(e){return fetch("".concat(this._baseUrl,"/cards"),{method:"POST",headers:this._headers,body:JSON.stringify({name:e.name,link:e.link})}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}},{key:"removeCard",value:function(e){return fetch("".concat(this._baseUrl,"/cards/").concat(e),{method:"DELETE",headers:this._headers}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}},{key:"toggleLike",value:function(e,t){return fetch("".concat(this._baseUrl,"/cards/likes/").concat(e),{method:t?"PUT":"DELETE",headers:this._headers}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}}])&&e(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),t}();function n(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var o=function(){function e(t,n,o,i,c,a){var u=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),r(this,"_handleLike",(function(e){u._likes=u._handleLikeButton(u._cardId,u._cardElement,u._likes),e.target.classList.toggle("image-card__love-button_active")})),r(this,"_handlePopup",(function(){u._handleCardClick(u._link,u._name)})),r(this,"_handleRemove",(function(){u._handleDeletePopup(u._cardId,u._cardElement)})),this._name=t.name,this._link=t.link,this._likes=t.likes,this._owner=t.owner,this._ownerId=this._owner._id,this._cardId=t._id,this._userId=i,this._cardElement=n.querySelector(".image-card").cloneNode(!0),this._handleDeletePopup=c,this._handleCardClick=o,this._handleLikeButton=a}var t,o;return t=e,(o=[{key:"createCard",value:function(){var e=this._cardElement.querySelector(".image-card__name"),t=this._cardElement.querySelector(".image-card__image"),n=this._cardElement.querySelector(".image-card__love-count");return e.textContent=this._name,t.style.backgroundImage="url(".concat(this._link,")"),n.textContent=this._likes.length,this._setEventListeners(),this._cardElement}},{key:"_setEventListeners",value:function(){var e=this,t=this._cardElement.querySelector(".image-card__love-button"),n=this._cardElement.querySelector(".image-card__image"),r=this._cardElement.querySelector(".image-card__remove-button");this._likes.forEach((function(n){e._userId===n._id&&t.classList.add("image-card__love-button_active")})),t.addEventListener("click",this._handleLike),n.addEventListener("click",this._handlePopup),this._ownerId===this._userId?r.addEventListener("click",this._handleRemove):r.remove()}}])&&n(t.prototype,o),Object.defineProperty(t,"prototype",{writable:!1}),e}();function i(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var c=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._settings=t,this._formElement=n}var t,n;return t=e,(n=[{key:"enableValidation",value:function(){this._formElement.addEventListener("submit",(function(e){e.preventDefault()})),this._setEventListeners()}},{key:"_setEventListeners",value:function(){var e=this,t=Array.from(this._formElement.querySelectorAll(this._settings.inputSelector)),n=this._formElement.querySelector(this._settings.submitButtonSelector);this._toggleButtonState(t,n),t.forEach((function(r){r.addEventListener("input",(function(){e._checkInputValidity(r),e._toggleButtonState(t,n)}))}))}},{key:"_toggleButtonState",value:function(e,t){this._hasInvalidInput(e)?(t.classList.add(this._settings.inactiveButtonClass),t.disabled=!0):(t.classList.remove(this._settings.inactiveButtonClass),t.disabled=!1)}},{key:"_hasInvalidInput",value:function(e){return e.some((function(e){return!e.validity.valid}))}},{key:"_checkInputValidity",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}},{key:"_showInputError",value:function(e,t){var n=this._formElement.querySelector(".".concat(e.id,"-error"));e.classList.add(this._settings.inputErrorClass),n.textContent=t,n.classList.add(this._settings.errorClass)}},{key:"_hideInputError",value:function(e){var t=this._formElement.querySelector(".".concat(e.id,"-error"));e.classList.remove(this._settings.inputErrorClass),t.classList.remove(this._settings.errorClass),t.textContent=""}}])&&i(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function a(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function u(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var l=function(){function e(t){var n=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),u(this,"_handleButtonClose",(function(){n.close()})),u(this,"_handleEscClose",(function(e){"Escape"===e.key&&n.close()})),u(this,"_handleClickClose",(function(e){e.target.classList.contains("popup_visible")&&n.close()})),this._popupSelector=document.querySelector(t),this._closeButton=this._popupSelector.querySelector(".popup__close-button")}var t,n;return t=e,(n=[{key:"open",value:function(){this._popupSelector.classList.add("popup_visible"),this.setEventListeners()}},{key:"close",value:function(){this._popupSelector.classList.remove("popup_visible"),document.removeEventListener("click",this._handleClickClose),document.removeEventListener("keydown",this._handleEscClose),this._closeButton.addEventListener("click",this._handleButtonClose)}},{key:"setEventListeners",value:function(){document.addEventListener("click",this._handleClickClose),document.addEventListener("keydown",this._handleEscClose),this._closeButton.addEventListener("click",this._handleButtonClose)}}])&&a(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function s(e){return s="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},s(e)}function f(e,t){return f=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},f(e,t)}function p(e,t){if(t&&("object"===s(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return h(e)}function h(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function d(){return d="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=_(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},d.apply(this,arguments)}function _(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=y(e)););return e}function y(e){return y=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},y(e)}var v=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");Object.defineProperty(e,"prototype",{value:Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),writable:!1}),t&&f(e,t)}(i,e);var t,n,r,o=(n=i,r=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=y(n);if(r){var o=y(this).constructor;e=Reflect.construct(t,arguments,o)}else e=t.apply(this,arguments);return p(this,e)});function i(e){var t,n,r,c,a;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,i),a=function(e,r){n._popupImage.src=e,n._popupImage.alt=r,n._popupTitle.textContent=r,d((t=h(n),y(i.prototype)),"open",t).call(t)},(c="open")in(r=h(n=o.call(this,e)))?Object.defineProperty(r,c,{value:a,enumerable:!0,configurable:!0,writable:!0}):r.open=a,n._popupImage=n._popupSelector.querySelector(".popup__image"),n._popupTitle=n._popupSelector.querySelector(".popup__card-title"),n}return t=i,Object.defineProperty(t,"prototype",{writable:!1}),t}(l);function b(e){return b="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},b(e)}function m(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function g(){return g="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=E(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},g.apply(this,arguments)}function E(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=C(e)););return e}function w(e,t){return w=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},w(e,t)}function S(e,t){if(t&&("object"===b(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return k(e)}function k(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function C(e){return C=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},C(e)}var O=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");Object.defineProperty(e,"prototype",{value:Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),writable:!1}),t&&w(e,t)}(c,e);var t,n,r,o,i=(r=c,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=C(r);if(o){var n=C(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return S(this,e)});function c(e,t){var n,r,o,a;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,c),a=function(e){e.preventDefault(),n._handleSubmission(n._getInputValues())},(o="_handleSubmissionFunc")in(r=k(n=i.call(this,t)))?Object.defineProperty(r,o,{value:a,enumerable:!0,configurable:!0,writable:!0}):r[o]=a,n._handleSubmission=e,n._inputList=n._popupSelector.querySelectorAll(".popup__input"),n._form=n._popupSelector.querySelector(".popup__form"),n}return t=c,(n=[{key:"close",value:function(){g(C(c.prototype),"close",this).call(this),this._form.reset()}},{key:"setEventListeners",value:function(){g(C(c.prototype),"setEventListeners",this).call(this),this._popupSelector.addEventListener("submit",this._handleSubmissionFunc)}},{key:"_getInputValues",value:function(){var e={};return this._inputList.forEach((function(t){return e[t.name]=t.value})),e}}])&&m(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),c}(l);function j(e){return j="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},j(e)}function P(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function L(){return L="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=q(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},L.apply(this,arguments)}function q(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=B(e)););return e}function I(e,t){return I=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},I(e,t)}function x(e,t){if(t&&("object"===j(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return R(e)}function R(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function B(e){return B=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},B(e)}var T=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");Object.defineProperty(e,"prototype",{value:Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),writable:!1}),t&&I(e,t)}(c,e);var t,n,r,o,i=(r=c,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=B(r);if(o){var n=B(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return x(this,e)});function c(e,t,n,r){var o,a,u,l;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,c),l=function(){o._handleVerification(o._id,o._element)},(u="_handleVerificationFunc")in(a=R(o=i.call(this,t)))?Object.defineProperty(a,u,{value:l,enumerable:!0,configurable:!0,writable:!0}):a[u]=l,o._saveBtn=o._popupSelector.querySelector(".popup__save-button"),o._handleVerification=e,o._id=n,o._element=r,o}return t=c,(n=[{key:"setEventListeners",value:function(){L(B(c.prototype),"setEventListeners",this).call(this),this._saveBtn.addEventListener("click",this._handleVerificationFunc)}},{key:"setInfo",value:function(e,t){this._id=e,this._element=t}}])&&P(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),c}(l);function U(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var D=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._userNameElement=t,this._userJobElement=n}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{name:this._userNameElement.textContent,job:this._userJobElement.textContent}}},{key:"setUserInfo",value:function(e,t){this._userNameElement.textContent=e,this._userJobElement.textContent=t}}])&&U(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function V(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var A=function(){function e(t,n){var r=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderer=r,this._containerElement=document.querySelector(n)}var t,n;return t=e,(n=[{key:"renderer",value:function(e){var t=this;e.forEach((function(e){return t._renderer(e)}))}},{key:"addItem",value:function(e){this._containerElement.prepend(e)}}])&&V(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}(),N=document.querySelector(".profile__button_type_edit"),J=document.querySelector(".profile__button_type_edit-img"),F=document.querySelector(".profile__button_type_add-image"),H=document.querySelector(".profile__name"),z=document.querySelector(".profile__info"),M=document.querySelector("#profile-image"),Y=".popup_type_edit-profile",G=".popup_type_edit-profile-image",K=".popup_type_add-card",Q=".popup_type_remove-card",W=document.querySelector("#card-template").content,X=document.querySelector(Y).querySelector(".popup__input_type_name"),Z=document.querySelector(Y).querySelector(".popup__input_type_info"),$=document.querySelector(G).querySelector(".popup__input_type_profile-img-link"),ee=new D(H,z),te=new O((function(e){var t=document.querySelector(Y).querySelector(".popup__save-button");t.textContent="Saving...",ue.setUserInfo(e).then((function(e){ee.setUserInfo(e.name,e.about),H.textContent=e.name,z.textContent=e.about})).catch((function(e){console.log(e)})),t.textContent="Save",te.close()}),Y),ne=new O((function(e){var t=document.querySelector(G).querySelector(".popup__save-button");t.textContent="Saving...",ue.setUserAvatar(e).then((function(e){M.src=e.avatar})).catch((function(e){console.log(e)})),t.textContent="Save",ne.close()}),G),re=new O((function(e){var t=document.querySelector(K).querySelector(".popup__save-button");t.textContent="Creating...",ue.addNewCard(e).then((function(e){var t=new o(e,W,ce,se,fe,pe);le.addItem(t.createCard())})).catch((function(e){console.log(e)})),t.textContent="Create",re.close()}),K),oe=new T((function(e,t){var n=document.querySelector(Q).querySelector(".popup__save-button");n.textContent="Deleting...",ue.removeCard(e).then((function(e){t.remove(),t=null})).catch((function(e){console.log(e)})).finally((function(){n.textContent="Yes",oe.close()}))}),Q,"",""),ie=new v(".popup_type_card-view"),ce=ie.open,ae={formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__save-button",inactiveButtonClass:"popup__save-button_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__error_visible"};Array.from(document.querySelectorAll(ae.formSelector)).forEach((function(e){new c(ae,e).enableValidation()}));var ue=new t({baseUrl:"https://around.nomoreparties.co/v1/group-12",headers:{authorization:"9b1558af-91ea-493b-ada9-7496ba6fa8e8","Content-Type":"application/json"}}),le=new A({renderer:function(e){var t=new o(e,W,ce,se,fe,pe);le.addItem(t.createCard())}},".images-container"),se="";function fe(e,t){oe.setInfo(e,t),oe.open()}function pe(e,t,n){var r=n,o=t.querySelector(".image-card__love-button"),i=t.querySelector(".image-card__love-count");return o.classList.contains("image-card__love-button_active")?ue.toggleLike(e,!1).then((function(e){i.textContent=e.likes.length,r=e.likes})).catch((function(e){console.log(e)})):ue.toggleLike(e,!0).then((function(e){i.textContent=e.likes.length,r=e.likes})).catch((function(e){console.log(e)})),r}ue.getUserInfo().then((function(e){ee.setUserInfo(e.name,e.about),H.textContent=e.name,z.textContent=e.about,M.src=e.avatar,M.alt="".concat(e.name,"'s avatar"),se=e._id})).catch((function(e){console.log(e)})),ue.getInitialCards().then((function(e){le.renderer(e),console.log(e)})).catch((function(e){console.log(e)})),re.setEventListeners(),ie.setEventListeners(),N.addEventListener("click",(function(){te.open();var e=ee.getUserInfo();X.value=e.name,Z.value=e.job})),J.addEventListener("click",(function(){var e=M.src;ne.open(),$.value=e})),F.addEventListener("click",(function(){re.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,